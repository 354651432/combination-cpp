** loop version
demo
#+begin_src c++
  vector<int> arr1 = {10, 20, 30, 40, 50, 60, 70, 80, 90, 11, 22, 33, 44};

  Combination<int> cb(arr1);

  // auto result = cb.arrangement(4);
  auto result = cb.combination(4);

  int idx = 0;
  for (auto res : result) {
	cout << ++idx << ": ";
	for (auto it : res) {
	  cout << it << " ";
	}
	cout << endl;
   }
#+end_src

** recursion version
   #+begin_src c++
   vector<int> arr1 = {10, 20, 30, 40, 50, 60, 70, 80, 90, 11};

    Combination<int> cb(arr1, 3);
    auto result = cb.arrangement();
    // result = cb.combination();

    int idx = 0;
    for (auto res : result) {
        cout << ++idx << ": ";
        for (auto it : res) {
            cout << it << " ";
        }
        cout << endl;
    }

    return 0;
   #+end_src

